@page "/LOLChampions"

@using CRUDCodeFirst.Data
@using CRUDCodeFirst.Services
@inject IChampionServices _championService

<h3>CRUD</h3>

<button class="btn btn-primary" @onclick="ShowPopup">Add new Champion</button>

@*Popup ===========================================================*@
@if (popup)
{
    <div class="modal" tabindex="-1" style="display:block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Champion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="ClosePopup"></button>
                </div>

                <EditForm Model="newChamp" OnValidSubmit="AddChampion">
                    <div class="modal-body">
                        <input type="text" class="w-100 mt-3" placeholder="Champion name here..." @bind="newChamp.Name" /><br />

                        <div class="mySelects">
                            <select @bind="newChamp.Class" class="w-50 mt-3 mySelect">
                                <option value="0">Select a class</option>
                                <option value="1">Mage</option>
                                <option value="2">ADC</option>
                                <option value="3">Assassin</option>
                                <option value="4">Tank</option>
                                <option value="5">Bruiser</option>
                            </select>

                            <select @bind="newChamp.DamageType" class="w-50 mt-3 mySelect">
                                <option value="0">Select a damage type</option>
                                <option value="1">AD</option>
                                <option value="2">AP</option>
                                <option value="3">Mixed</option>
                            </select>
                        </div>

                        <label for="startingAD" class="mt-3">Starting attack damage?</label>
                        <input type="number" name="startingAD" class="w-100 mt-3" @bind="newChamp.StartingAttackDamage" /><br />

                    </div>

                    <div class="modal-footer">
                        @*<button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="ClosePopup">Close</button>*@
                        <button type="submit" class="btn btn-primary" @onclick="ClosePopup">Save changes</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@*Table ================================================================*@

<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Class</th>
            <th>Damage type</th>
            <th>Starting attack damage</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var champ in displayChampions)
        {
        <tr>
            <td>@champ.ChampionId</td>
            <td>@champ.Name</td>
            <td>@champ.Class</td>
            <td>@champ.DamageType</td>
            <td>@champ.StartingAttackDamage</td>
            <td><button class="btn btn-info" @onclick="(()=>EditChampion(champ))">Edit</button></td>
            <td><button class="btn btn-danger" @onclick="(()=>DeleteChampion(champ))">Delete</button></td>
        </tr>
        }
    </tbody>
</table>


@code {
    List<Champion> displayChampions;
    bool popup = false;
    Champion newChamp = new Champion();

    protected override void OnInitialized()
    {
        displayChampions = _championService.GetChampions();
    }

    void ShowPopup()
    {
        popup = true;
    }

    void ClosePopup()
    {
        popup = false;
    }

    void AddChampion()
    {
        var champUpdate = false;
        if (newChamp.ChampionId>0)
        {
            champUpdate = _championService.UpdateChampion(newChamp);
            popup = false;
        }
        else
        {
            newChamp.ChampionId = 0;
            _championService.AddChampion(newChamp);
        }

        // Run this again in order to show newly added champion
        displayChampions = _championService.GetChampions();
    }

    void EditChampion(Champion editChamp)
    {
        newChamp = editChamp;
        popup = true;
    }

    void DeleteChampion(Champion deleteChamp)
    {
        _championService.DeleteChampion(deleteChamp);
        displayChampions.Clear();
        displayChampions = _championService.GetChampions();

    }

}
